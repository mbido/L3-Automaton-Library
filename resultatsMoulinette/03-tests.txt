-- The CXX compiler identification is GNU 12.2.0
-- The C compiler identification is GNU 12.2.0
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Check for working CXX compiler: /usr/bin/c++ - skipped
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Check for working C compiler: /usr/bin/cc - skipped
-- Detecting C compile features
-- Detecting C compile features - done
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Success
-- Found Threads: TRUE  
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jube/Univ/theorie_des_langages/projet/corr/2023/sandbox-tests/build
[ 25%] Building CXX object CMakeFiles/testfa.dir/Automaton.cc.o
[ 50%] Building CXX object CMakeFiles/testfa.dir/testfa.cc.o
[ 75%] Building CXX object CMakeFiles/testfa.dir/googletest/googletest/src/gtest-all.cc.o
[100%] Linking CXX executable testfa
[100%] Built target testfa
==249044== Memcheck, a memory error detector
==249044== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==249044== Using Valgrind-3.19.0 and LibVEX; rerun with -h for copyright info
==249044== Command: ./testfa
==249044== 
[==========] Running 118 tests from 36 test suites.
[----------] Global test environment set-up.
[----------] 2 tests from testIsValid
[ RUN      ] testIsValid.inValidAutomaton
[       OK ] testIsValid.inValidAutomaton (3 ms)
[ RUN      ] testIsValid.validAutomaton
[       OK ] testIsValid.validAutomaton (2 ms)
[----------] 2 tests from testIsValid (8 ms total)

[----------] 5 tests from testAddSymbol
[ RUN      ] testAddSymbol.notInAlphabet
[       OK ] testAddSymbol.notInAlphabet (1 ms)
[ RUN      ] testAddSymbol.inAlphabet
[       OK ] testAddSymbol.inAlphabet (1 ms)
[ RUN      ] testAddSymbol.afterBeingRemoved
[       OK ] testAddSymbol.afterBeingRemoved (2 ms)
[ RUN      ] testAddSymbol.allInvalidSymbol
[       OK ] testAddSymbol.allInvalidSymbol (1 ms)
[ RUN      ] testAddSymbol.allValidSymbol
[       OK ] testAddSymbol.allValidSymbol (2 ms)
[----------] 5 tests from testAddSymbol (9 ms total)

[----------] 2 tests from testRemoveSymbol
[ RUN      ] testRemoveSymbol.notInAlphabet
[       OK ] testRemoveSymbol.notInAlphabet (1 ms)
[ RUN      ] testRemoveSymbol.inAlphabetAndInTransition
[       OK ] testRemoveSymbol.inAlphabetAndInTransition (4 ms)
[----------] 2 tests from testRemoveSymbol (5 ms total)

[----------] 2 tests from testHasSymbol
[ RUN      ] testHasSymbol.notInAlphabet
[       OK ] testHasSymbol.notInAlphabet (1 ms)
[ RUN      ] testHasSymbol.inAlphabet
[       OK ] testHasSymbol.inAlphabet (1 ms)
[----------] 2 tests from testHasSymbol (2 ms total)

[----------] 2 tests from testCountSymbol
[ RUN      ] testCountSymbol.emptyAlphabet
[       OK ] testCountSymbol.emptyAlphabet (1 ms)
[ RUN      ] testCountSymbol.nonEmptyAlphabet
[       OK ] testCountSymbol.nonEmptyAlphabet (1 ms)
[----------] 2 tests from testCountSymbol (2 ms total)

[----------] 5 tests from testAddState
[ RUN      ] testAddState.doesNotExist
[       OK ] testAddState.doesNotExist (1 ms)
[ RUN      ] testAddState.negativeState
[       OK ] testAddState.negativeState (1 ms)
[ RUN      ] testAddState.alreadyExists
[       OK ] testAddState.alreadyExists (1 ms)
[ RUN      ] testAddState.afterBeingRemoved
[       OK ] testAddState.afterBeingRemoved (1 ms)
[ RUN      ] testAddState.stateWithLargeValue
[       OK ] testAddState.stateWithLargeValue (1 ms)
[----------] 5 tests from testAddState (7 ms total)

[----------] 3 tests from testHasState
[ RUN      ] testHasState.emptySetTable
[       OK ] testHasState.emptySetTable (1 ms)
[ RUN      ] testHasState.stateExist
[       OK ] testHasState.stateExist (1 ms)
[ RUN      ] testHasState.stateDoesNotExist
[       OK ] testHasState.stateDoesNotExist (1 ms)
[----------] 3 tests from testHasState (3 ms total)

[----------] 2 tests from testRemoveState
[ RUN      ] testRemoveState.stateDoesNotExist
[       OK ] testRemoveState.stateDoesNotExist (1 ms)
[ RUN      ] testRemoveState.stateExist
[       OK ] testRemoveState.stateExist (1 ms)
[----------] 2 tests from testRemoveState (2 ms total)

[----------] 1 test from testRemoveTest
[ RUN      ] testRemoveTest.stateExistWithTransitions
[       OK ] testRemoveTest.stateExistWithTransitions (6 ms)
[----------] 1 test from testRemoveTest (6 ms total)

[----------] 2 tests from testCountStates
[ RUN      ] testCountStates.emptyStateTable
[       OK ] testCountStates.emptyStateTable (1 ms)
[ RUN      ] testCountStates.nonEmptyStateTable
[       OK ] testCountStates.nonEmptyStateTable (1 ms)
[----------] 2 tests from testCountStates (3 ms total)

[----------] 2 tests from testSetStateInitial
[ RUN      ] testSetStateInitial.stateDoesNotExist
[       OK ] testSetStateInitial.stateDoesNotExist (1 ms)
[ RUN      ] testSetStateInitial.stateExist_Plus_testIsInitialWhenExists
[       OK ] testSetStateInitial.stateExist_Plus_testIsInitialWhenExists (1 ms)
[----------] 2 tests from testSetStateInitial (2 ms total)

[----------] 1 test from testIsStateInitial
[ RUN      ] testIsStateInitial.stateDoesNotExist
[       OK ] testIsStateInitial.stateDoesNotExist (1 ms)
[----------] 1 test from testIsStateInitial (1 ms total)

[----------] 2 tests from testSetStateFinal
[ RUN      ] testSetStateFinal.stateDoesNotExist
[       OK ] testSetStateFinal.stateDoesNotExist (1 ms)
[ RUN      ] testSetStateFinal.stateExist_Plus_testIsFinalWhenExists
[       OK ] testSetStateFinal.stateExist_Plus_testIsFinalWhenExists (1 ms)
[----------] 2 tests from testSetStateFinal (2 ms total)

[----------] 1 test from testIsStateFinal
[ RUN      ] testIsStateFinal.stateDoesNotExist
[       OK ] testIsStateFinal.stateDoesNotExist (1 ms)
[----------] 1 test from testIsStateFinal (1 ms total)

[----------] 6 tests from testAddTransition
[ RUN      ] testAddTransition.transitionsThatShouldWork
[       OK ] testAddTransition.transitionsThatShouldWork (2 ms)
[ RUN      ] testAddTransition.epsilonTransitions
[       OK ] testAddTransition.epsilonTransitions (1 ms)
[ RUN      ] testAddTransition.transitionsOnSameState
[       OK ] testAddTransition.transitionsOnSameState (1 ms)
[ RUN      ] testAddTransition.alreadyExists
[       OK ] testAddTransition.alreadyExists (2 ms)
[ RUN      ] testAddTransition.stateDoesNotExist
[       OK ] testAddTransition.stateDoesNotExist (1 ms)
[ RUN      ] testAddTransition.symbolDoesNotExist
[       OK ] testAddTransition.symbolDoesNotExist (1 ms)
[----------] 6 tests from testAddTransition (12 ms total)

[----------] 4 tests from testRemoveTransition
[ RUN      ] testRemoveTransition.transitionExists
[       OK ] testRemoveTransition.transitionExists (3 ms)
[ RUN      ] testRemoveTransition.transitionDoesNotExistAnymore
[       OK ] testRemoveTransition.transitionDoesNotExistAnymore (2 ms)
[ RUN      ] testRemoveTransition.stateDoesNotExist
[       OK ] testRemoveTransition.stateDoesNotExist (1 ms)
[ RUN      ] testRemoveTransition.symbolDoesNotExist
[       OK ] testRemoveTransition.symbolDoesNotExist (1 ms)
[----------] 4 tests from testRemoveTransition (10 ms total)

[----------] 4 tests from testHasTransition
[ RUN      ] testHasTransition.transitionExists
[       OK ] testHasTransition.transitionExists (2 ms)
[ RUN      ] testHasTransition.transitionDoesNotExist
[       OK ] testHasTransition.transitionDoesNotExist (1 ms)
[ RUN      ] testHasTransition.stateDoesNotExist
[       OK ] testHasTransition.stateDoesNotExist (1 ms)
[ RUN      ] testHasTransition.symbolDoesNotExist
[       OK ] testHasTransition.symbolDoesNotExist (1 ms)
[----------] 4 tests from testHasTransition (8 ms total)

[----------] 2 tests from testCountTransition
[ RUN      ] testCountTransition.emptyTransitionTable
[       OK ] testCountTransition.emptyTransitionTable (1 ms)
[ RUN      ] testCountTransition.nonEmptyTransitionTable
[       OK ] testCountTransition.nonEmptyTransitionTable (2 ms)
[----------] 2 tests from testCountTransition (3 ms total)

[----------] 1 test from testPrettyPrint
[ RUN      ] testPrettyPrint.prettyPrintTest
Initial states:
	0 1 
Final states:
	1 4 
Transitions:
	For state 0:
		For letter a: 1 2 3 
		For letter b: 
	For state 1:
		For letter a: 
		For letter b: 3 
	For state 2:
		For letter a: 3 
		For letter b: 4 
	For state 3:
		For letter a: 3 
		For letter b: 4 
	For state 4:
		For letter a: 4 
		For letter b: 
[       OK ] testPrettyPrint.prettyPrintTest (8 ms)
[----------] 1 test from testPrettyPrint (9 ms total)

[----------] 4 tests from testHasEpsilonTransition
[ RUN      ] testHasEpsilonTransition.NoEpsilonTransition
[       OK ] testHasEpsilonTransition.NoEpsilonTransition (1 ms)
[ RUN      ] testHasEpsilonTransition.OneEpsilonTransition
[       OK ] testHasEpsilonTransition.OneEpsilonTransition (1 ms)
[ RUN      ] testHasEpsilonTransition.epsilonTransitionOnItSelf
[       OK ] testHasEpsilonTransition.epsilonTransitionOnItSelf (0 ms)
[ RUN      ] testHasEpsilonTransition.MultipleEpsilonTransitions
[       OK ] testHasEpsilonTransition.MultipleEpsilonTransitions (1 ms)
[----------] 4 tests from testHasEpsilonTransition (4 ms total)

[----------] 7 tests from testIsDeterministic
[ RUN      ] testIsDeterministic.DeterministicAutomaton
[       OK ] testIsDeterministic.DeterministicAutomaton (1 ms)
[ RUN      ] testIsDeterministic.noInitialStates
[       OK ] testIsDeterministic.noInitialStates (1 ms)
[ RUN      ] testIsDeterministic.DeterministicAutomatonNoTransition
[       OK ] testIsDeterministic.DeterministicAutomatonNoTransition (0 ms)
[ RUN      ] testIsDeterministic.DeterministicAutomatonTransitionOnItSelf
[       OK ] testIsDeterministic.DeterministicAutomatonTransitionOnItSelf (1 ms)
[ RUN      ] testIsDeterministic.NotDeterministicAutomaton
[       OK ] testIsDeterministic.NotDeterministicAutomaton (1 ms)
[ RUN      ] testIsDeterministic.NotDeterministicAutomatonEpsilonTransition
testfa: /home/jube/Univ/theorie_des_langages/projet/corr/2023/sandbox-tests/Automaton.cc:453: bool fa::Automaton::isDeterministic() const: Assertion `!hasEpsilonTransition()' failed.
==249044== 
==249044== Process terminating with default action of signal 6 (SIGABRT): dumping core
==249044==    at 0x4C18D3C: __pthread_kill_implementation (pthread_kill.c:44)
==249044==    by 0x4BC9F31: raise (raise.c:26)
==249044==    by 0x4BB4471: abort (abort.c:79)
==249044==    by 0x4BB4394: __assert_fail_base.cold (assert.c:92)
==249044==    by 0x4BC2E31: __assert_fail (assert.c:101)
==249044==    by 0x134F4D: fa::Automaton::isDeterministic() const (Automaton.cc:453)
==249044==    by 0x142A0F: testIsDeterministic_NotDeterministicAutomatonEpsilonTransition_Test::TestBody() (testfa.cc:1032)
==249044==    by 0x1BAEAE: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2631)
==249044==    by 0x1BAEAE: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2667)
==249044==    by 0x1AD165: Run (gtest.cc:2706)
==249044==    by 0x1AD165: testing::Test::Run() (gtest.cc:2696)
==249044==    by 0x1AD364: testing::TestInfo::Run() [clone .part.0] (gtest.cc:2885)
==249044==    by 0x1AD53A: Run (gtest.cc:2858)
==249044==    by 0x1AD53A: testing::TestSuite::Run() [clone .part.0] (gtest.cc:3039)
==249044==    by 0x1B026C: Run (gtest.cc:3018)
==249044==    by 0x1B026C: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5897)
==249044== 
==249044== HEAP SUMMARY:
==249044==     in use at exit: 161,041 bytes in 991 blocks
==249044==   total heap usage: 2,983 allocs, 1,992 frees, 328,928 bytes allocated
==249044== 
==249044== LEAK SUMMARY:
==249044==    definitely lost: 0 bytes in 0 blocks
==249044==    indirectly lost: 0 bytes in 0 blocks
==249044==      possibly lost: 0 bytes in 0 blocks
==249044==    still reachable: 161,041 bytes in 991 blocks
==249044==         suppressed: 0 bytes in 0 blocks
==249044== Rerun with --leak-check=full to see details of leaked memory
==249044== 
==249044== For lists of detected and suppressed errors, rerun with: -s
==249044== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
timeout: la commande surveillée a renvoyé un core dump
Aborted
